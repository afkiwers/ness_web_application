worker_processes        1;
user                    nginx;
error_log	              '/var/log/nginx/nginx-error.log';

pid /var/run/nginx.pid;

events {
  worker_connections  1024; # increase if you have lots of clients
  accept_mutex        off; # set to 'on' if nginx worker_processes > 1
}

http {

    include                  mime.types;

    # fallback in case we can't determine a type
    default_type            application/octet-stream;
    add_header              X-XSS-Protection "1; mode=block";
    add_header              X-Content-Type-Options "nosniff";

    access_log	           '/var/log/nginx/nginx-access.log';
    sendfile                on;
    proxy_read_timeout      300s;
    client_max_body_size    0; # disable any limits to avoid HTTP 413 for large image uploads

    # include 				        /etc/nginx/mime.types;
    # sendfile				        on;

    upstream app_server {
       # fail_timeout=0 means we always retry an upstream even if it failed
       # to return a good HTTP response

       # for a TCP configuration
       server 192.168.10.8:8011 fail_timeout=0;

       # if server is down, show our service page
       server 192.168.10.8:80 backup;
    }

    server {
        listen			    80 default;
        charset         utf-8;
        server_tokens   off;

        # set the correct host(s) for website
        # server_name example.com.au www.example.com.au;

        location /static/ {
            alias	      /var/www/static/;
        }

        location /media/ {
            alias	      /var/www/media/;
        }

        location / {

            proxy_set_header      Host                $http_host;

            proxy_set_header      X-Forwarded-Host    $server_name;
            proxy_set_header      X-Forwarded-For     $proxy_add_x_forwarded_for;
            proxy_set_header      X-Forwarded-Proto   $scheme;
            proxy_set_header      X-Real-IP           $remote_addr;

            # proxy_redirect        off;
            proxy_pass            http://app_server;
        }
    }
}
